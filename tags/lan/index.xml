<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>lan on slippytrumpet.io</title><link>https://slippytrumpet.io/tags/lan/</link><description>Recent content in lan on slippytrumpet.io</description><generator>Hugo -- gohugo.io</generator><language>en</language><lastBuildDate>Mon, 10 Jul 2017 17:27:33 +0100</lastBuildDate><atom:link href="https://slippytrumpet.io/tags/lan/index.xml" rel="self" type="application/rss+xml"/><item><title>Experiments with Messaging over Ethernet Frames</title><link>https://slippytrumpet.io/posts/experiments-with-message-queuing-over-ethernet-frames/</link><pubDate>Mon, 10 Jul 2017 17:27:33 +0100</pubDate><guid>https://slippytrumpet.io/posts/experiments-with-message-queuing-over-ethernet-frames/</guid><description>In his article, Network Protocol Breakdown: Ethernet and Go, Matt Layher describes the Ethernet protocol and introduces a couple of libraries written in Go. I read the article with interest. Application communication, at the Ethernet frame level, a lower level than TCP sockets, was something I&amp;rsquo;d never considered before.
Of particular interest was the &amp;ldquo;broadcast&amp;rdquo; nature of the communication. In contrast to sockets - though frames can also be addressed to specific devices - frames can be broadcast network-wide, enabling more than one device to listen and use the frame payload.</description></item></channel></rss>
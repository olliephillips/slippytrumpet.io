<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>linux on slippytrumpet.io</title><link>https://slippytrumpet.io/tags/linux/</link><description>Recent content in linux on slippytrumpet.io</description><generator>Hugo -- gohugo.io</generator><language>en</language><lastBuildDate>Thu, 08 Jun 2017 10:27:15 +0100</lastBuildDate><atom:link href="https://slippytrumpet.io/tags/linux/index.xml" rel="self" type="application/rss+xml"/><item><title>Running your Application as a Service on Pi Zero W</title><link>https://slippytrumpet.io/posts/running-your-app-as-service-on-pi-zero-w/</link><pubDate>Thu, 08 Jun 2017 10:27:15 +0100</pubDate><guid>https://slippytrumpet.io/posts/running-your-app-as-service-on-pi-zero-w/</guid><description>Daemonize your application so that it is easily started, stopped and resilient to crashes So you&amp;rsquo;ve got your headless Raspberry Pi Zero W all set up and you&amp;rsquo;ve been running applications you&amp;rsquo;ve written for yourself on it? I have, I&amp;rsquo;m using Go with a combination of Embd and Periph.io libraries to interact with the hardware on the Pi Zero W itself and external to it.
But it feels clunky.</description></item></channel></rss>
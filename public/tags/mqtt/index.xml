<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>mqtt on Slippytrumpet - My blog on the technologies that have been messing with me</title>
    <link>https://slippytrumpet.io/tags/mqtt/</link>
    <description>Recent content in mqtt on Slippytrumpet - My blog on the technologies that have been messing with me</description>
    <generator>Hugo -- gohugo.io</generator>
    <lastBuildDate>Mon, 10 Jul 2017 17:27:33 +0100</lastBuildDate>
    
        <atom:link href="https://slippytrumpet.io/tags/mqtt/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Experiments with Messaging over Ethernet Frames</title>
      <link>https://slippytrumpet.io/2017/07/experiments-with-message-queuing-over-ethernet-frames/</link>
      <pubDate>Mon, 10 Jul 2017 17:27:33 +0100</pubDate>
      
      <guid>https://slippytrumpet.io/2017/07/experiments-with-message-queuing-over-ethernet-frames/</guid>
      <description>In his article, Network Protocol Breakdown: Ethernet and Go, Matt Layher describes the Ethernet protocol and introduces a couple of libraries written in Go. I read the article with interest. Application communication, at the Ethernet frame level, a lower level than TCP sockets, was something I&amp;rsquo;d never considered before.
Of particular interest was the &amp;ldquo;broadcast&amp;rdquo; nature of the communication. In contrast to sockets - though frames can also be addressed to specific devices - frames can be broadcast network-wide, enabling more than one device to listen and use the frame payload.</description>
    </item>
    
    <item>
      <title>Web Bluetooth to MQTT Gateway with Puck.js</title>
      <link>https://slippytrumpet.io/2017/04/webbluetooth-to-mqtt-gateway/</link>
      <pubDate>Fri, 07 Apr 2017 12:36:46 +0100</pubDate>
      
      <guid>https://slippytrumpet.io/2017/04/webbluetooth-to-mqtt-gateway/</guid>
      <description>If you read A little bit of Web Bluetooth you&amp;rsquo;ll know a bit about Puck.js and the new Web Bluetooth API already. But what, aside from building a gimmicky two factor authentication system, can you do with it? I had some ideas.
What about an interface through which you can program multiple Pucks at the same time? The Web IDE allows you to connect and program one Puck at a time.</description>
    </item>
    
    <item>
      <title>A little bit of Web Bluetooth</title>
      <link>https://slippytrumpet.io/2017/02/a-little-bit-of-web-bluetooth/</link>
      <pubDate>Thu, 09 Feb 2017 15:08:26 +0100</pubDate>
      
      <guid>https://slippytrumpet.io/2017/02/a-little-bit-of-web-bluetooth/</guid>
      <description>Communicating using the Bluetooth protocol has traditionally been the sole preserve of native applications. Now you can do it from a web page! This is the first of two short posts on my experiments with Puck.js and Web Bluetooth. This one looks at security; the second will look at a Web Bluetooth to MQTT gateway experiment.
What&amp;rsquo;s Web Bluetooth? Some may know, that from Google Chrome v56, the Web Bluetooth API went from being an experimental &amp;ldquo;opt-in&amp;rdquo; feature to enabled by default.</description>
    </item>
    
  </channel>
</rss>
